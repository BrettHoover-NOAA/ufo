window begin: 2000-01-01T00:00:00Z
window end: 2030-01-01T00:00:00Z

observations:

# 1. Tests of DrawValueFromFile@IntObsFunction using a CSV input file

- obs space: &ObsSpace
    name: Map a string variable to an int result by exact matching (with a fallback value), CSV
    obsdatain:
      obsfile: Data/ufo/testinput_tier_1/variable_assignment_testdata.nc
    simulated variables: [air_temperature]
  obs function:
    name: DrawValueFromFile@IntObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.csv
      group: IntResult
      interpolation:
      # ["ABC", "DEF", "GHI", "JKL", "MNO"]
      - name: string_variable_1@MetaData
        method: exact
    # Variable from the TestReference group storing the reference result,
    # [1, 75, 75, 75, 5]
    variables: [assigned_int_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Map an int variable to an int result by nearest-neighbor matching, CSV
  obs function:
    name: DrawValueFromFile@IntObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.csv
      group: IntResult
      interpolation:
      # [1, 2, 3, 4, 5]
      - name: int_variable_1@MetaData
        method: nearest
    # Variable from the TestReference group storing the reference result,
    # [1, 75, 75, 75, 5]
    variables: [assigned_int_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Map a float variable to an int result by least-upper-bound matching, CSV
  obs function:
    name: DrawValueFromFile@IntObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.csv
      group: IntResult
      interpolation:
      # [-2.5, -1.25, 0, 1.25, 2.5]
      - name: latitude@MetaData
        method: least upper bound
    # Variable from the TestReference group storing the reference result,
    # [1, 75, 75, 75, 5]
    variables: [assigned_int_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Map a float variable to an int result by greatest-lower-bound matching, CSV
  obs function:
    name: DrawValueFromFile@IntObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.csv
      group: IntResult
      interpolation:
      # [11.25, 12.25, 13.5, 14.75, 15.75]
      - name: longitude@MetaData
        method: least upper bound
    # Variable from the TestReference group storing the reference result,
    # [1, 75, 75, 75, 5]
    variables: [assigned_int_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Attempt to use linear interpolation to extract an int variable
  obs function:
    name: DrawValueFromFile@IntObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.csv
      group: IntResult
      interpolation:
      # [11.25, 12.25, 13.5, 14.75, 15.75]
      - name: longitude@MetaData
        method: linear
    variables: [assigned_string_variable_1]
  expect compute to throw exception with message: Linear interpolation can be used when extracting floating-point values, but not integers or strings

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Attempt to produce integers from a payload column of type string
  obs function:
    name: DrawValueFromFile@IntObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.csv
      group: StringResult
      interpolation:
      # [11.25, 12.25, 13.5, 14.75, 15.75]
      - name: longitude@MetaData
        method: linear
    variables: [assigned_string_variable_1]
  expect compute to throw exception with message: The payload column must contain numeric data


# 2. Tests of DrawValueFromFile@StringObsFunction using a CSV input file

- obs space: &ObsSpace
    name: Map a string variable to a string result by exact matching (with a fallback value), CSV
    obsdatain:
      obsfile: Data/ufo/testinput_tier_1/variable_assignment_testdata.nc
    simulated variables: [air_temperature]
  obs function:
    name: DrawValueFromFile@StringObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.csv
      group: StringResult
      interpolation:
      # ["ABC", "DEF", "GHI", "JKL", "MNO"]
      - name: string_variable_1@MetaData
        method: exact
    # Variable from the TestReference group storing the reference result,
    # ["ABC", "XYZ", "XYZ", "XYZ", "MNO"]
    variables: [assigned_string_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Map an int variable to a string result by nearest-neighbor matching, CSV
  obs function:
    name: DrawValueFromFile@StringObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.csv
      group: StringResult
      interpolation:
      # [1, 2, 3, 4, 5]
      - name: int_variable_1@MetaData
        method: nearest
    # Variable from the TestReference group storing the reference result,
    # ["ABC", "XYZ", "XYZ", "XYZ", "MNO"]
    variables: [assigned_string_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Map a float variable to a string result by least-upper-bound matching, CSV
  obs function:
    name: DrawValueFromFile@StringObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.csv
      group: StringResult
      interpolation:
      # [-2.5, -1.25, 0, 1.25, 2.5]
      - name: latitude@MetaData
        method: least upper bound
    # Variable from the TestReference group storing the reference result,
    # ["ABC", "XYZ", "XYZ", "XYZ", "MNO"]
    variables: [assigned_string_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Map a float variable to a string result by greatest-lower-bound matching, CSV
  obs function:
    name: DrawValueFromFile@StringObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.csv
      group: StringResult
      interpolation:
      # [11.25, 12.25, 13.5, 14.75, 15.75]
      - name: longitude@MetaData
        method: least upper bound
    # Variable from the TestReference group storing the reference result,
    # ["ABC", "XYZ", "XYZ", "XYZ", "MNO"]
    variables: [assigned_string_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Attempt to use linear interpolation to extract a string variable
  obs function:
    name: DrawValueFromFile@StringObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.csv
      group: StringResult
      interpolation:
      # [11.25, 12.25, 13.5, 14.75, 15.75]
      - name: longitude@MetaData
        method: linear
    variables: [assigned_string_variable_1]
  expect compute to throw exception with message: Linear interpolation can be used when extracting floating-point values, but not integers or strings

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Attempt to produce strings from a payload column of type int
  obs function:
    name: DrawValueFromFile@StringObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.csv
      group: IntResult
      interpolation:
      # [11.25, 12.25, 13.5, 14.75, 15.75]
      - name: longitude@MetaData
        method: linear
    variables: [assigned_string_variable_1]
  expect compute to throw exception with message: The payload column must contain strings or datetimes

# 3. Tests of DrawValueFromFile@IntObsFunction using a NetCDF input file

- obs space: &ObsSpace
    name: Map a string variable to an int result by exact matching (with a fallback value), NetCDF
    obsdatain:
      obsfile: Data/ufo/testinput_tier_1/variable_assignment_testdata.nc
    simulated variables: [air_temperature]
  obs function:
    name: DrawValueFromFile@IntObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.nc
      group: IntResult
      interpolation:
      # ["ABC", "DEF", "GHI", "JKL", "MNO"]
      - name: string_variable_1@MetaData
        method: exact
    # Variable from the TestReference group storing the reference result,
    # [1, 75, 75, 75, 5]
    variables: [assigned_int_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Map an int variable to an int result by nearest-neighbor matching, NetCDF
  obs function:
    name: DrawValueFromFile@IntObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.nc
      group: IntResult
      interpolation:
      # [1, 2, 3, 4, 5]
      - name: int_variable_1@MetaData
        method: nearest
    # Variable from the TestReference group storing the reference result,
    # [1, 75, 75, 75, 5]
    variables: [assigned_int_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Map a float variable to an int result by least-upper-bound matching, NetCDF
  obs function:
    name: DrawValueFromFile@IntObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.nc
      group: IntResult
      interpolation:
      # [-2.5, -1.25, 0, 1.25, 2.5]
      - name: latitude@MetaData
        method: least upper bound
    # Variable from the TestReference group storing the reference result,
    # [1, 75, 75, 75, 5]
    variables: [assigned_int_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Map a float variable to an int result by greatest-lower-bound matching, NetCDF
  obs function:
    name: DrawValueFromFile@IntObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.nc
      group: IntResult
      interpolation:
      # [11.25, 12.25, 13.5, 14.75, 15.75]
      - name: longitude@MetaData
        method: least upper bound
    # Variable from the TestReference group storing the reference result,
    # [1, 75, 75, 75, 5]
    variables: [assigned_int_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Attempt to use linear interpolation to extract an int variable, NetCDF
  obs function:
    name: DrawValueFromFile@IntObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.nc
      group: IntResult
      interpolation:
      # [11.25, 12.25, 13.5, 14.75, 15.75]
      - name: longitude@MetaData
        method: linear
    variables: [assigned_string_variable_1]
  expect compute to throw exception with message: Linear interpolation can be used when extracting floating-point values, but not integers or strings


# 4. Tests of DrawValueFromFile@StringObsFunction using a NetCDF input file

- obs space: &ObsSpace
    name: Map a string variable to a string result by exact matching (with a fallback value), NetCDF
    obsdatain:
      obsfile: Data/ufo/testinput_tier_1/variable_assignment_testdata.nc
    simulated variables: [air_temperature]
  obs function:
    name: DrawValueFromFile@StringObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.nc
      group: StringResult
      interpolation:
      # ["ABC", "DEF", "GHI", "JKL", "MNO"]
      - name: string_variable_1@MetaData
        method: exact
    # Variable from the TestReference group storing the reference result,
    # ["ABC", "XYZ", "XYZ", "XYZ", "MNO"]
    variables: [assigned_string_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Map an int variable to a string result by nearest-neighbor matching, NetCDF
  obs function:
    name: DrawValueFromFile@StringObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.nc
      group: StringResult
      interpolation:
      # [1, 2, 3, 4, 5]
      - name: int_variable_1@MetaData
        method: nearest
    # Variable from the TestReference group storing the reference result,
    # ["ABC", "XYZ", "XYZ", "XYZ", "MNO"]
    variables: [assigned_string_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Map a float variable to a string result by least-upper-bound matching, NetCDF
  obs function:
    name: DrawValueFromFile@StringObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.nc
      group: StringResult
      interpolation:
      # [-2.5, -1.25, 0, 1.25, 2.5]
      - name: latitude@MetaData
        method: least upper bound
    # Variable from the TestReference group storing the reference result,
    # ["ABC", "XYZ", "XYZ", "XYZ", "MNO"]
    variables: [assigned_string_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Map a float variable to a string result by greatest-lower-bound matching, NetCDF
  obs function:
    name: DrawValueFromFile@StringObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.nc
      group: StringResult
      interpolation:
      # [11.25, 12.25, 13.5, 14.75, 15.75]
      - name: longitude@MetaData
        method: least upper bound
    # Variable from the TestReference group storing the reference result,
    # ["ABC", "XYZ", "XYZ", "XYZ", "MNO"]
    variables: [assigned_string_variable_1]

- obs space: &ObsSpace
    <<: *ObsSpace
    name: Attempt to use linear interpolation to extract a string variable
  obs function:
    name: DrawValueFromFile@StringObsFunction
    options:
      file: Data/ufo/testinput_tier_1/drawvaluefromfile_simple.nc
      group: StringResult
      interpolation:
      # [11.25, 12.25, 13.5, 14.75, 15.75]
      - name: longitude@MetaData
        method: linear
    variables: [assigned_string_variable_1]
  expect compute to throw exception with message: Linear interpolation can be used when extracting floating-point values, but not integers or strings
